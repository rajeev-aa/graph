{
	"info": {
		"_postman_id": "961b1bb0-2f1a-480b-bdc5-0c90b5813b45",
		"name": "AddToPriorityList",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "MultiPaxMultiSeg",
			"item": [
				{
					"name": "Hold seats from upg inventory",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525416f-b674-4967-9e87-f515202ba097",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55462e29-b85c-400d-be03-e030aa4856f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Save PNR value as collection variable\", function () {\r",
									"    // Parse the response body as JSON\r",
									"    const responseBody = pm.response.json();\r",
									"    \r",
									"    // Extract PNR value from the response body\r",
									"    const pnrValue = responseBody.ExecuteScriptResult.group[0].property[2].value;\r",
									"    \r",
									"    // Set the PNR value as a collection variable\r",
									"    pm.collectionVariables.set(\"pnrResponse\", pnrValue);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "457e85ab-d747-4386-a591-c97857bb892b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parameters\": {\r\n        \"group\": [\r\n            {\r\n                \"name\": \"Connection\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Environment\",\r\n                        \"value\": \"CERT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Suffix\",\r\n                        \"value\": \"AAO\"\r\n                    },\r\n                    {\r\n                        \"name\": \"DutyCode\",\r\n                        \"value\": \"5\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Id\",\r\n                        \"value\": \"871638\"\r\n                    },\r\n                    {\r\n                        \"name\": \"CurrentPasscode\",\r\n                        \"value\": \"E500UPG\"\r\n                    },\r\n                    {\r\n                        \"name\": \"City\",\r\n                        \"value\": \"HDQ\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Options\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"114JANSANPHX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"VCNA2\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"020J2OB\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"-C/20TESTE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"6S\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"9800-000-0000\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"7T-A/F\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"6S\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"ER\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"@@(includeCollection)\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"actionAdapterLog\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"variables\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"engineLog\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"actionAdapterLogSerialized\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"engineLogSerialized\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"systemVariables\",\r\n                        \"value\": \"false\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"@@(exception)\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"stackTraceIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"innerExceptionIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"ScriptName\": \"PSS.ExecuteCommands\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript"
					},
					"response": []
				},
				{
					"name": "CreatePNR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525416f-b674-4967-9e87-f515202ba097",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55462e29-b85c-400d-be03-e030aa4856f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Save PNR value as collection variable\", function () {\r",
									"    // Parse the response body as JSON\r",
									"    const responseBody = pm.response.json();\r",
									"    \r",
									"    // Extract PNR value from the response body\r",
									"    const pnrValue = responseBody.ExecuteScriptResult.group[0].property[2].value;\r",
									"    \r",
									"    // Set the PNR value as a collection variable\r",
									"    pm.collectionVariables.set(\"pnrResponse\", pnrValue);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d732de63-483d-4490-b828-7cb9851b98a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Parameters\" : {\r\n      \"group\" : [\r\n         {\r\n            \"name\" : \"Connection\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"Environment\",\r\n                  \"value\" : \"CERT\"\r\n               },\r\n               {\r\n                  \"name\" : \"Suffix\",\r\n                  \"value\" : \"AAO\"\r\n               },\r\n               {\r\n                  \"name\" : \"DutyCode\",\r\n                  \"value\" : \"5\"\r\n               },\r\n               {\r\n                  \"name\" : \"Id\",\r\n                  \"value\" : \"871638\"\r\n               },\r\n               {\r\n                  \"name\" : \"CurrentPasscode\",\r\n                  \"value\" : \"E500UPG\"\r\n               },\r\n               {\r\n                  \"name\" : \"City\",\r\n                  \"value\" : \"HDQ\"\r\n               }\r\n            ]\r\n         },\r\n\r\n         {\r\n\r\n            \"name\" : \"Flight\",\r\n\r\n            \"property\" : [\r\n\r\n               {\r\n\r\n                  \"name\" : \"AirlineCode\",\r\n\r\n                  \"value\" : \"AA\"\r\n\r\n               },\r\n\r\n               {\r\n\r\n                  \"name\" : \"DepartureDate\",\r\n\r\n \r\n\r\n                  \"value\" : \"14JAN\"\r\n\r\n               },\r\n\r\n               {\r\n\r\n                  \"name\" : \"Origin\",\r\n\r\n \r\n\r\n                  \"value\" : \"SAN\"\r\n\r\n               },\r\n                {\r\n                        \"name\": \"FlightNumber\",\r\n                        \"value\": \"516\"\r\n                    },\r\n\r\n               {\r\n\r\n                  \"name\" : \"Destination\",\r\n\r\n                  \"value\" : \"PHX\"\r\n\r\n               },\r\n\r\n                                                            \r\n\r\n               {\r\n\r\n                  \"name\" : \"Status\",\r\n\r\n                  \"value\" :  \"NN\"\r\n\r\n               },\r\n\r\n               {\r\n\r\n                  \"name\" : \"ClassOfService\",\r\n\r\n                  \"value\" : \"Y\"\r\n\r\n               }\r\n\r\n            ]\r\n\r\n         } \r\n        ,\r\n         {\r\n            \"name\" : \"Options\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"FareType\",\r\n                   \"value\" : \"WP\"\r\n               },\r\n               {\r\n                  \"name\" : \"Ticketed\",\r\n                  \"value\" :  \"TRUE\"\r\n               },\r\n                 {\r\n                  \"name\" : \"Hold\",\r\n                  \"value\" : \"82300\"\r\n               },               \r\n            ]\r\n         }\r\n  \t   ,\r\n  \t       {\r\n            \"name\" : \"Passenger\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"FirstName\",\r\n               \"value\" : \"AADVANTAG\"\r\n               },\r\n               {\r\n                  \"name\" : \"LastName\",\r\n               \"value\" : \"TEST\"\r\n               },\r\n               {\r\n                  \"name\" : \"Gender\",\r\n                  \"value\" : \"M\"\r\n               },\r\n               {\r\n                  \"name\" : \"DOB\",\r\n                  \"value\" : \"01JAN80\"\r\n               },\r\n               {\r\n                  \"name\" : \"ContactPhone\",\r\n                  \"value\" : \"6023004759\"\r\n               },\r\n                {\r\n                  \"name\": \"PassportNumber\",\r\n                  \"value\": \"2938475647\"\r\n               },\r\n               {\r\n                  \"name\": \"PassportIssueDate\",\r\n                  \"value\": \"01JAN10\"\r\n               },\r\n               {\r\n                  \"name\": \"PassportExpiryDate\",\r\n                  \"value\": \"01JAN20\"\r\n               },\r\n               {\r\n                  \"name\": \"PassportIssueCountry\",\r\n                  \"value\": \"USA\"\r\n               },\r\n               {\r\n                  \"name\": \"PassportResidenceCountry\",\r\n                  \"value\": \"USA\"\r\n               }\r\n            ,\r\n               {\r\n                  \"name\" : \"FrequentFlyerNumber\",\r\n               \"value\" : \"AAJ9R0404\"\r\n         \r\n               }]\r\n               }\r\n      ,\r\n         {\r\n            \"name\" : \"EmailAddresses\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"Email\",\r\n                  \"value\" : \"ABVC@GMAIL.COM\"\r\n               },\r\n               {\r\n                  \"name\" : \"Email\",\r\n                  \"value\" : \"ABVC@GMAIL.COM\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\" : \"Address\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"Country\",\r\n                  \"value\" : \"USA\"\r\n               },\r\n               {\r\n                  \"name\" : \"StreetAddress\",\r\n                  \"value\" : \"2025 CAMPBELL AVE\"\r\n               },\r\n               {\r\n                  \"name\" : \"City\",\r\n                  \"value\" : \"PHOENIX\"\r\n               },\r\n               {\r\n                  \"name\" : \"State\",\r\n                  \"value\" : \"AZ\"\r\n               },\r\n               {\r\n                  \"name\" : \"ZipCode\",\r\n                  \"value\" : \"85016\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\" : \"Phone\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"City\",\r\n                  \"value\" : \"PHX\"\r\n               },\r\n               {\r\n                  \"name\" : \"Number\",\r\n                  \"value\" : \"6023007777\"\r\n               },\r\n               {\r\n                  \"name\" : \"Type\",\r\n                  \"value\" : \"M\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\" : \"Debug\",\r\n            \"property\" : [\r\n               {\r\n                  \"name\" : \"ServiceExecutionLoggingIsEnabled\",\r\n                  \"value\" : \"false\"\r\n               },\r\n               {\r\n                  \"name\" : \"ScriptItemTraceIsEnabled\",\r\n                  \"value\" : \"false\"\r\n               },\r\n               {\r\n                  \"name\" : \"ExceptionStackTraceIsEnabled\",\r\n                  \"value\" : \"true\"\r\n               },\r\n               {\r\n                 \"name\" : \"CommandResponseLoggingIsEnabled\",\r\n                  \"value\" : \"true\"\r\n               },\r\n               {\r\n                  \"name\" : \"ReturnVariablesCollection\",\r\n                  \"value\" : \"false\"\r\n               },\r\n               {\r\n                  \"name\" : \"UseMockedResponses\",\r\n                  \"value\" : \"false\"\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"ScriptName\" : \"PSS.RevenueCashLongSell\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript",
						"description": "# ExecuteScript API\n\nThis API endpoint is used to execute a specific script with provided parameters.\n\n## Request\n\n- Method: POST\n    \n- Endpoint: `https://tapi.adt.aa.com/api/ExecuteScript`\n    \n- { \"Parameters\": { \"group\": \\[ { \"name\": \"Connection\", \"property\": \\[ { \"name\": \"Environment\", \"value\": \"CERT\" } \\] } \\] }, \"ScriptName\": \"PSS.RevenueCashLongSell\"}\n    \n\n## Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- { \"ExecuteScriptResult\": { \"name\": \"\", \"group\": \\[ { \"name\": \"\", \"property\": \\[ { \"name\": \"\", \"value\": \"\" } \\] } \\] }}\n    \n\n## Response Handling\n\nTo store the PNR value from the response body in the collection level, you can use Postman scripts to extract the value from the `ExecuteScriptResult` and store it in the collection level for future use."
					},
					"response": []
				},
				{
					"name": "addFQTU",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525416f-b674-4967-9e87-f515202ba097",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55462e29-b85c-400d-be03-e030aa4856f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b92e831c-2be6-4487-a431-af843553688d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Parameters\": {\r\n      \"group\": [\r\n         {\r\n            \"name\": \"Connection\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"Environment\",\r\n                  \"value\": \"CERT\"\r\n               },\r\n               {\r\n                  \"name\": \"Suffix\",\r\n                  \"value\": \"AAO\"\r\n               },\r\n               {\r\n                  \"name\": \"DutyCode\",\r\n                  \"value\": \"5\"\r\n               },\r\n                {\r\n                  \"name\" : \"Id\",\r\n                  \"value\" : \"871638\"\r\n               },\r\n               {\r\n                  \"name\" : \"CurrentPasscode\",\r\n                  \"value\" : \"E500UPG\"\r\n               },\r\n               {\r\n                  \"name\": \"City\",\r\n                  \"value\": \"HDQ\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"Options\",\r\n            \"property\": [\r\n               \r\n               {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"*{{pnrResponse}}\"\r\n               },\r\n           \r\n                  {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"WC1R/UPG\"\r\n               },      \r\n                                    \r\n                {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"6S\"\r\n               },\r\n               {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"ER\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"@@(includeCollection)\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"actionAdapterLog\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"variables\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"engineLog\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"actionAdapterLogSerialized\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"engineLogSerialized\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"systemVariables\",\r\n                  \"value\": \"false\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"@@(exception)\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"stackTraceIsEnabled\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"innerExceptionIsEnabled\",\r\n                  \"value\": \"true\"\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"ScriptName\": \"PSS.ExecuteCommands\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript"
					},
					"response": []
				},
				{
					"name": "upgrade db-stage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "763c8a17-a745-4e18-90bd-7e08afeb23ad",
								"exec": [
									"",
									"const tokenRequest = {",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",",
									"    method: 'POST',",
									"    header: { ",
									"        'content-type': 'application/x-www-form-urlencoded',",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',",
									"        },",
									"    body: {",
									"        mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: 'client_credentials'}",
									"    ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(tokenRequest, function (err, res) {",
									"    var jsonData = res.json();",
									"    if (err) {",
									"        console.log(err);",
									"    }",
									"    else {",
									"        pm.environment.set(\"token\", res.json().token);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b182cd60-f925-4038-b9cb-d88aa8fee028",
								"exec": [
									"pm.test(\"Retrieve and store the primaryTier from the response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"primaryTier\", jsonData[0].primaryTier);\r",
									"});\r",
									"\r",
									"// Extract the flightNumber from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve and store flightNumber in a collection variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"flightNumber\", jsonData[0].segment.flightNumber);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the origin from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the origin from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"origin\", responseJson[0].segment.origin);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the destination from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the destination from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"destination\", responseJson[0].segment.destination);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the departureDate from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the departureDate from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"departureDate\", responseJson[0].segment.departureDate);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the departureDateTimeLocal from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the departureDateTimeLocal from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"departureDateTimeLocal\", responseJson[0].segment.departureDateTimeLocal);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the arrivalDateTimeLocal from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the arrivalDateTimeLocal from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"arrivalDateTimeLocal\", responseJson[0].segment.arrivalDateTimeLocal);\r",
									"});\r",
									"\r",
									"// Add a test to retrieve the departureDateTime from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the departureDateTime from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"departureDateTime\", responseJson[0].segment.departureDateTime);\r",
									"});\r",
									"// Add a test to retrieve the arrivalDateTime from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the arrivalDateTime from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"arrivalDateTime\", responseJson[0].segment.arrivalDateTime);\r",
									"});\r",
									"// Add a test to retrieve the upgRequestDateTime from the response and store it in a collection variable\r",
									"pm.test(\"Retrieve the upgRequestDateTime from the response and store it in a collection variable\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.collectionVariables.set(\"upgRequestDateTime\", responseJson[0].segment.upgRequestDateTime);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Extract the firstName from the response and store it in a collection variable\r",
									"pm.test(\"Extract and store the firstName in a collection variable\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    var firstNames = [];\r",
									"\r",
									"    responseData.forEach(function (item) {\r",
									"        if (item.passengers && item.passengers.length > 0 && item.passengers[0].firstName) {\r",
									"            firstNames.push(item.passengers[0].firstName);\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"firstName\", firstNames);\r",
									"});\r",
									"\r",
									"// Extract the lastName from the response and store it in a collection variable\r",
									"pm.test(\"Extract and store the lastName in a collection variable\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    var lastNames = [];\r",
									"\r",
									"    responseData.forEach(function (item) {\r",
									"        if (item.passengers && item.passengers.length > 0 && item.passengers[0].lastName) {\r",
									"            lastNames.push(item.passengers[0].lastName);\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"lastName\", lastNames);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "795d44b7-6d5f-49b0-8e74-140a5011abc5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://loyalty-upgrades.stage.aa.com/api/e500/auto-upgrade/?pnr={{pnrResponse}}",
							"protocol": "https",
							"host": [
								"loyalty-upgrades",
								"stage",
								"aa",
								"com"
							],
							"path": [
								"api",
								"e500",
								"auto-upgrade",
								""
							],
							"query": [
								{
									"key": "pnr",
									"value": "{{pnrResponse}}"
								}
							]
						},
						"description": "This API endpoint is a GET request to retrieve auto-upgrade information based on a provided Passenger Name Record (PNR). The request should include the PNR as a query parameter.\n\nThe response to the last execution had a status code of 200 and a content type of application/json. The response body is a JSON array containing objects with various fields such as id, pnrSeqNumber, createDateTime, locator, companionPnr, sponsorPnr, primaryTier, segment, passengers, _ts, createdDate, lastModifiedBy, and lastModifiedByDate.\n\nTo fulfill the user's request of copying each response body variable to the collection level, the response body variables should be extracted and stored at the collection level for further use."
					},
					"response": []
				},
				{
					"name": "Upgrades-Check-in-service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e7ef066e-c207-4200-9b84-dd8331269626",
								"exec": [
									"\r",
									"const tokenRequest = {\r",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",\r",
									"    method: 'POST',\r",
									"    header: { \r",
									"        'content-type': 'application/x-www-form-urlencoded',\r",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',\r",
									"        },\r",
									"    body: {\r",
									"        mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: 'client_credentials'}\r",
									"    ]\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(tokenRequest, function (err, res) {\r",
									"    var jsonData = res.json();\r",
									"    if (err) {\r",
									"        console.log(err);\r",
									"    }\r",
									"    else {\r",
									"        pm.environment.set(\"token\", res.json().token);\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ced6d4eb-d8b6-4943-971e-513b6daf0758",
								"exec": [
									"pm.test(\"Response body contains the specified text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('Complimentary upgrade requested, adding to priority list');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "757f662d-63b2-4049-b200-e5af9bb863a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-Transaction-Id",
								"value": "123",
								"type": "text"
							},
							{
								"key": "X-Client-Id",
								"value": "LoyUpgrds",
								"type": "text"
							},
							{
								"key": "X-Correlation-id",
								"value": "123",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n       \"id\": \"RRNOPC_AA_516_SAN_PHX_2025-01-14\",\n        \"pnrSeqNumber\": 5,\n        \"createDateTime\": \"2025-01-13\",\n        \"locator\": \"{{pnrResponse}}\",\n        \"companionPnr\": null,\n        \"sponsorPnr\": null,\n        \"primaryTier\": \"{{primaryTier}}\",\n        \"segment\": {\n            \"action\": \"Requested\",\n            \"airline\": \"AA\",\n            \"marketingAirline\": \"AA\",\n            \"flightNumber\": {{flightNumber}},\n            \"origin\": \"{{origin}}\",\n            \"destination\": \"{{destination}}\",\n            \"departureDate\": \"{{departureDate}}\",\n            \"departureDateTimeLocal\": \"{{departureDateTimeLocal}}\",\n            \"arrivalDateTimeLocal\": \"{{arrivalDateTimeLocal}}\",\n            \"fareClass\": \"Y\",\n            \"segSequence\": 1,\n            \"statusCode\": \"HK\",\n            \"active\": true,\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"upgRequestDateTime\": \"{{upgRequestDateTime}}\"\n        },\n        \"passengers\": [\n            {\n                \"paxRefNum\": \"01.01\",\n                \"firstName\": \"{{firstName}}\",\n                \"lastName\": \"{{lastName}}\",\n                \"nameID\": 0,\n                \"passengerType\": \"ADULT\",\n                \"checkin\": true\n                \n            }\n        ],\n        \"_ts\": \"2025-01-13T13:59:02Z\",\n        \"createdDate\": \"2025-01-13T13:59:02.825794041Z\",\n        \"lastModifiedBy\": \"RIPA\",\n        \"lastModifiedByDate\": \"2025-01-13T13:59:02.825807441Z\"\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://loyalty-upgrades.stage.aa.com/api/e500/auto-upgrade/checkin/pax"
					},
					"response": []
				},
				{
					"name": "AddPriorityList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d778fe77-a45f-40a9-904c-5a1b696739b6",
								"exec": [
									"const tokenRequest = {",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",",
									"    method: 'POST',",
									"    header: { ",
									"        'content-type': 'application/x-www-form-urlencoded',",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',",
									"        },",
									"    body: {",
									"        mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: 'client_credentials'}",
									"    ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(tokenRequest, function (err, res) {",
									"    var jsonData = res.json();",
									"    if (err) {",
									"        console.log(err);",
									"    }",
									"    else {",
									"        pm.environment.set(\"token\", res.json().token);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "de769daa-e1e3-41d4-994a-7fd028525c76",
								"exec": [
									"pm.test(\"Response body contains 'PASSENGER ALREADY ON PRIORITY LIST'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"PASSENGER ALREADY ON PRIORITY LIST\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b0aa4857-ab62-484c-8fdf-4ae4a37a4037",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Transaction-Id",
								"value": "Test-2024230283939",
								"type": "text"
							},
							{
								"key": "X-Client-Id",
								"value": "LocalClient",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pnrLocator\": \"{{pnrResponse}}\",\n    \"flightCriteria\": {\n        \"airlineCode\": \"AA\",\n        \"flightNumber\": \"{{flightNumber}}\",\n        \"departureAirportCode\": \"{{origin}}\",\n        \"departureDate\": \"{{departureDate}}\",\n        \"arrivalAirportCode\": \"{{destination}}\"\n    },\n    \"passengerInfo\": [\n        {\n            \"nameAssociationId\": \"1\",\n            \"lastName\": \"{{lastName}}\",\n            \"firstName\": \"{{firstName}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://loyalty-upgrades.stage.aa.com/api/loyalty/upgrades/addprioritylist"
					},
					"response": []
				}
			],
			"id": "e1758e4a-4fc3-4db6-8641-c467b122ae01"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f1059e32-9efd-4591-a760-67905fc8669c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ae0dba5e-526a-4ebb-bedd-270db56ba0a4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pnrResponse",
			"value": ""
		},
		{
			"key": "primaryTier",
			"value": ""
		},
		{
			"key": "flightNumber",
			"value": ""
		},
		{
			"key": "origin",
			"value": ""
		},
		{
			"key": "destination",
			"value": ""
		},
		{
			"key": "departureDate",
			"value": ""
		},
		{
			"key": "departureDateTimeLocal",
			"value": ""
		},
		{
			"key": "arrivalDateTimeLocal",
			"value": ""
		},
		{
			"key": "departureDateTime",
			"value": ""
		},
		{
			"key": "arrivalDateTime",
			"value": ""
		},
		{
			"key": "upgRequestDateTime",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "nextDate",
			"value": ""
		},
		{
			"key": "originAirportCode",
			"value": ""
		},
		{
			"key": "departureAirportCode",
			"value": ""
		}
	]
}