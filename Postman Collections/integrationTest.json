{
	"info": {
		"_postman_id": "961b1bb0-2f1a-480b-bdc5-0c90b5813b45",
		"name": "AddToPriorityList",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "SinglePaxSingleSeg",
			"item": [
				{
					"name": "Hold seats from upg inventory",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6eba9aca-65e5-4793-98ed-460be942a7a6",
								"exec": [
									"// Get the current date\r",
									"let currentDate = new Date();\r",
									"\r",
									"// Add one day to the current date\r",
									"currentDate.setDate(currentDate.getDate() + 1);\r",
									"\r",
									"// Format the date as DDMMM (e.g., 30JAN)\r",
									"let options = { day: '2-digit', month: 'short' };\r",
									"let formattedDate = currentDate.toLocaleDateString('en-GB', options).replace(' ', '').toUpperCase();\r",
									"\r",
									"// Set the formatted date as a collection variable\r",
									"pm.collectionVariables.set(\"nextDate\", formattedDate);\r",
									"\r",
									"// Array of sample IATA airport codes\r",
									"let airportCodes = ['DFW','SAN','LAX', 'ORD','DEN', 'LAS'];\r",
									"\r",
									"// Generate a random index from the airportCodes array\r",
									"let randomIndex = Math.floor(Math.random() * airportCodes.length);\r",
									"\r",
									"// Get the random airport code\r",
									"let randomAirportCode = airportCodes[randomIndex];\r",
									"\r",
									"// Set the random airport code as a collection variable\r",
									"pm.collectionVariables.set(\"originAirportCode\", randomAirportCode);\r",
									"\r",
									"// Array of sample IATA airport codes\r",
									"let departureairportCodes = ['JFK','MIA','PHX'];\r",
									"\r",
									"// Generate a random index from the airportCodes array\r",
									"let departurerandomIndex = Math.floor(Math.random() * departureairportCodes.length);\r",
									"\r",
									"// Get the random airport code\r",
									"let departurerandomAirportCode = departureairportCodes[departurerandomIndex];\r",
									"\r",
									"// Set the random airport code as a collection variable\r",
									"pm.collectionVariables.set(\"departureAirportCode\", departurerandomAirportCode);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5490107e-871b-476f-91d3-095602561c07",
								"exec": [
									"// Modify the pre-request script to format the month as capital letters (e.g., 30JAN)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0c4b1a7c-88dc-48c3-96f7-700f9dae0bb7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parameters\": {\r\n        \"group\": [\r\n            {\r\n                \"name\": \"Connection\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Environment\",\r\n                        \"value\": \"CERT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Suffix\",\r\n                        \"value\": \"AAO\"\r\n                    },\r\n                    {\r\n                        \"name\": \"DutyCode\",\r\n                        \"value\": \"5\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Id\",\r\n                        \"value\": \"871638\"\r\n                    },\r\n                    {\r\n                        \"name\": \"CurrentPasscode\",\r\n                        \"value\": \"E500UPG\"\r\n                    },\r\n                    {\r\n                        \"name\": \"City\",\r\n                        \"value\": \"HDQ\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Options\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"1{{nextDate}}SANPHX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"VCNA1\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"020J1OB\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"-C/20TESTE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"6S\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"9800-000-0000\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"7T-A/F\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"6S\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Command\",\r\n                        \"value\": \"ER\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"@@(includeCollection)\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"actionAdapterLog\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"variables\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"engineLog\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"actionAdapterLogSerialized\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"engineLogSerialized\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"systemVariables\",\r\n                        \"value\": \"false\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"@@(exception)\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"stackTraceIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"innerExceptionIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"ScriptName\": \"PSS.ExecuteCommands\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript",
						"description": "The `POST` request to `/api/ExecuteScript` endpoint is used to execute a script. The request should have a raw body with parameters and a script name. The script name should be provided in the format `PSS.ExecuteCommands`.\n\n### Request Body\n\n- `Parameters` (object)\n    \n    - `group` (array)\n        \n        - `name` (string)\n            \n        - `property` (array)\n            \n            - `name` (string)\n                \n            - `value` (string)\n                \n- `ScriptName` (string)\n    \n\nExample:\n\n``` json\n{\n  \"Parameters\": {\n    \"group\": [\n      {\n        \"name\": \"Connection\",\n        \"property\": [\n          {\n            \"name\": \"Environment\",\n            \"value\": \"CERT\"\n          }\n        ]\n      }\n    ]\n  },\n  \"ScriptName\": \"PSS.ExecuteCommands\"\n}\n\n ```\n\n### Response\n\nUpon successful execution, the response will have a status code of 200 and a JSON content type. The response body will contain the `ExecuteScriptResult` object with the updated script details.\n\nExample:\n\n``` json\n{\n  \"ExecuteScriptResult\": {\n    \"name\": \"\",\n    \"group\": [\n      {\n        \"name\": \"\",\n        \"property\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      }\n    ]\n  }\n}\n\n ```\n\nThe user's specific requirement to \"Generate a random date script that sets the date as the current date plus 1 day, and store it in a collection variable with the date format as DDMMM\" can be achieved by customizing the script logic accordingly."
					},
					"response": []
				},
				{
					"name": "CreatePNR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525416f-b674-4967-9e87-f515202ba097",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55462e29-b85c-400d-be03-e030aa4856f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Save PNR value as collection variable\", function () {\r",
									"    // Parse the response body as JSON\r",
									"    const responseBody = pm.response.json();\r",
									"    \r",
									"    // Extract PNR value from the response body\r",
									"    const pnrValue = responseBody.ExecuteScriptResult.group[0].property[2].value;\r",
									"    \r",
									"    // Set the PNR value as a collection variable\r",
									"    pm.collectionVariables.set(\"pnrResponse\", pnrValue);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a0c59298-e030-48b4-88d6-16eaf8d876dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Parameters\": {\r\n        \"group\": [\r\n            {\r\n                \"name\": \"Connection\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Environment\",\r\n                        \"value\": \"CERT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Suffix\",\r\n                        \"value\": \"AAO\"\r\n                    },\r\n                    {\r\n                        \"name\": \"DutyCode\",\r\n                        \"value\": \"5\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Id\",\r\n                        \"value\": \"871638\"\r\n                    },\r\n                    {\r\n                        \"name\": \"CurrentPasscode\",\r\n                        \"value\": \"E500UPG\"\r\n                    },\r\n                    {\r\n                        \"name\": \"City\",\r\n                        \"value\": \"HDQ\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Flight\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"AirlineCode\",\r\n                        \"value\": \"AA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"DepartureDate\",\r\n                        \"value\": \"{{nextDate}}\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Origin\",\r\n                        \"value\": \"SAN\"\r\n                    },\r\n                    {\r\n                        \"name\": \"FlightNumber\",\r\n                        \"value\": \"625\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Destination\",\r\n                        \"value\": \"PHX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Status\",\r\n                        \"value\": \"NN\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ClassOfService\",\r\n                        \"value\": \"Y\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Options\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"FareType\",\r\n                        \"value\": \"WP\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Ticketed\",\r\n                        \"value\": \"TRUE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Hold\",\r\n                        \"value\": \"82300\"\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Passenger\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"FirstName\",\r\n                        \"value\": \"AADVANTAG\"\r\n                    },\r\n                    {\r\n                        \"name\": \"LastName\",\r\n                        \"value\": \"TEST\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Gender\",\r\n                        \"value\": \"M\"\r\n                    },\r\n                    {\r\n                        \"name\": \"DOB\",\r\n                        \"value\": \"01JAN80\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ContactPhone\",\r\n                        \"value\": \"6023004759\"\r\n                    },\r\n                    {\r\n                        \"name\": \"PassportNumber\",\r\n                        \"value\": \"2938475647\"\r\n                    },\r\n                    {\r\n                        \"name\": \"PassportIssueDate\",\r\n                        \"value\": \"01JAN10\"\r\n                    },\r\n                    {\r\n                        \"name\": \"PassportExpiryDate\",\r\n                        \"value\": \"01JAN20\"\r\n                    },\r\n                    {\r\n                        \"name\": \"PassportIssueCountry\",\r\n                        \"value\": \"USA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"PassportResidenceCountry\",\r\n                        \"value\": \"USA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"FrequentFlyerNumber\",\r\n                        \"value\": \"AAJ9R0404\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"EmailAddresses\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Email\",\r\n                        \"value\": \"ABVC@GMAIL.COM\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Email\",\r\n                        \"value\": \"ABVC@GMAIL.COM\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Address\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"Country\",\r\n                        \"value\": \"USA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"StreetAddress\",\r\n                        \"value\": \"2025 CAMPBELL AVE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"City\",\r\n                        \"value\": \"PHOENIX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"State\",\r\n                        \"value\": \"AZ\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ZipCode\",\r\n                        \"value\": \"85016\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Phone\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"City\",\r\n                        \"value\": \"PHX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Number\",\r\n                        \"value\": \"6023007777\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Type\",\r\n                        \"value\": \"M\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": \"Debug\",\r\n                \"property\": [\r\n                    {\r\n                        \"name\": \"ServiceExecutionLoggingIsEnabled\",\r\n                        \"value\": \"false\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ScriptItemTraceIsEnabled\",\r\n                        \"value\": \"false\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ExceptionStackTraceIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"CommandResponseLoggingIsEnabled\",\r\n                        \"value\": \"true\"\r\n                    },\r\n                    {\r\n                        \"name\": \"ReturnVariablesCollection\",\r\n                        \"value\": \"false\"\r\n                    },\r\n                    {\r\n                        \"name\": \"UseMockedResponses\",\r\n                        \"value\": \"false\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"ScriptName\": \"PSS.RevenueCashLongSell\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript",
						"description": "# ExecuteScript API\n\nThis API endpoint is used to execute a specific script with provided parameters.\n\n## Request\n\n- Method: POST\n    \n- Endpoint: `https://tapi.adt.aa.com/api/ExecuteScript`\n    \n- { \"Parameters\": { \"group\": \\[ { \"name\": \"Connection\", \"property\": \\[ { \"name\": \"Environment\", \"value\": \"CERT\" } \\] } \\] }, \"ScriptName\": \"PSS.RevenueCashLongSell\"}\n    \n\n## Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- { \"ExecuteScriptResult\": { \"name\": \"\", \"group\": \\[ { \"name\": \"\", \"property\": \\[ { \"name\": \"\", \"value\": \"\" } \\] } \\] }}\n    \n\n## Response Handling\n\nTo store the PNR value from the response body in the collection level, you can use Postman scripts to extract the value from the `ExecuteScriptResult` and store it in the collection level for future use."
					},
					"response": []
				},
				{
					"name": "addFQTU",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525416f-b674-4967-9e87-f515202ba097",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55462e29-b85c-400d-be03-e030aa4856f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d4a1eb73-e881-45ff-95f0-5b44f712a67a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Parameters\": {\r\n      \"group\": [\r\n         {\r\n            \"name\": \"Connection\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"Environment\",\r\n                  \"value\": \"CERT\"\r\n               },\r\n               {\r\n                  \"name\": \"Suffix\",\r\n                  \"value\": \"AAO\"\r\n               },\r\n               {\r\n                  \"name\": \"DutyCode\",\r\n                  \"value\": \"5\"\r\n               },\r\n                {\r\n                  \"name\" : \"Id\",\r\n                  \"value\" : \"871638\"\r\n               },\r\n               {\r\n                  \"name\" : \"CurrentPasscode\",\r\n                  \"value\" : \"E500UPG\"\r\n               },\r\n               {\r\n                  \"name\": \"City\",\r\n                  \"value\": \"HDQ\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"Options\",\r\n            \"property\": [\r\n               \r\n               {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"*{{pnrResponse}}\"\r\n               },\r\n           \r\n                  {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"WC1R/UPG\"\r\n               },      \r\n                                    \r\n                {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"6S\"\r\n               },\r\n               {\r\n                  \"name\": \"Command\",\r\n                  \"value\": \"ER\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"@@(includeCollection)\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"actionAdapterLog\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"variables\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"engineLog\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"actionAdapterLogSerialized\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"engineLogSerialized\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"systemVariables\",\r\n                  \"value\": \"false\"\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"name\": \"@@(exception)\",\r\n            \"property\": [\r\n               {\r\n                  \"name\": \"stackTraceIsEnabled\",\r\n                  \"value\": \"true\"\r\n               },\r\n               {\r\n                  \"name\": \"innerExceptionIsEnabled\",\r\n                  \"value\": \"true\"\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"ScriptName\": \"PSS.ExecuteCommands\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://tapi.adt.aa.com/api/ExecuteScript"
					},
					"response": []
				},
				{
					"name": "upgrade db-stage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ff8d9239-a412-4d7a-ad31-59bcb625e053",
								"exec": [
									"",
									"const tokenRequest = {",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",",
									"    method: 'POST',",
									"    header: { ",
									"        'content-type': 'application/x-www-form-urlencoded',",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',",
									"        },",
									"    body: {",
									"        mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: 'client_credentials'}",
									"    ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(tokenRequest, function (err, res) {",
									"    var jsonData = res.json();",
									"    if (err) {",
									"        console.log(err);",
									"    }",
									"    else {",
									"        pm.environment.set(\"token\", res.json().token);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c28f0c12-b527-4a5d-a3b0-a18675528d75",
								"exec": [
									"pm.test(\"Retrieve and store the primaryTier from the response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"primaryTier\", jsonData[0].primaryTier);",
									"});",
									"",
									"// Extract the flightNumber from the response and store it in a collection variable",
									"pm.test(\"Retrieve and store flightNumber in a collection variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"flightNumber\", jsonData[0].segment.flightNumber);",
									"});",
									"",
									"// Add a test to retrieve the origin from the response and store it in a collection variable",
									"pm.test(\"Retrieve the origin from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"origin\", responseJson[0].segment.origin);",
									"});",
									"",
									"// Add a test to retrieve the destination from the response and store it in a collection variable",
									"pm.test(\"Retrieve the destination from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"destination\", responseJson[0].segment.destination);",
									"});",
									"",
									"// Add a test to retrieve the departureDate from the response and store it in a collection variable",
									"pm.test(\"Retrieve the departureDate from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"departureDate\", responseJson[0].segment.departureDate);",
									"});",
									"",
									"// Add a test to retrieve the departureDateTimeLocal from the response and store it in a collection variable",
									"pm.test(\"Retrieve the departureDateTimeLocal from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"departureDateTimeLocal\", responseJson[0].segment.departureDateTimeLocal);",
									"});",
									"",
									"// Add a test to retrieve the arrivalDateTimeLocal from the response and store it in a collection variable",
									"pm.test(\"Retrieve the arrivalDateTimeLocal from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"arrivalDateTimeLocal\", responseJson[0].segment.arrivalDateTimeLocal);",
									"});",
									"",
									"// Add a test to retrieve the departureDateTime from the response and store it in a collection variable",
									"pm.test(\"Retrieve the departureDateTime from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"departureDateTime\", responseJson[0].segment.departureDateTime);",
									"});",
									"// Add a test to retrieve the arrivalDateTime from the response and store it in a collection variable",
									"pm.test(\"Retrieve the arrivalDateTime from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"arrivalDateTime\", responseJson[0].segment.arrivalDateTime);",
									"});",
									"// Add a test to retrieve the upgRequestDateTime from the response and store it in a collection variable",
									"pm.test(\"Retrieve the upgRequestDateTime from the response and store it in a collection variable\", function () {",
									"    var responseJson = pm.response.json();",
									"    pm.collectionVariables.set(\"upgRequestDateTime\", responseJson[0].segment.upgRequestDateTime);",
									"});",
									"",
									"",
									"",
									"// Extract the firstName from the response and store it in a collection variable",
									"pm.test(\"Extract and store the firstName in a collection variable\", function () {",
									"    var responseData = pm.response.json();",
									"    var firstNames = [];",
									"",
									"    responseData.forEach(function (item) {",
									"        if (item.passengers && item.passengers.length > 0 && item.passengers[0].firstName) {",
									"            firstNames.push(item.passengers[0].firstName);",
									"        }",
									"    });",
									"",
									"    pm.collectionVariables.set(\"firstName\", firstNames);",
									"});",
									"",
									"// Extract the lastName from the response and store it in a collection variable",
									"pm.test(\"Extract and store the lastName in a collection variable\", function () {",
									"    var responseData = pm.response.json();",
									"    var lastNames = [];",
									"",
									"    responseData.forEach(function (item) {",
									"        if (item.passengers && item.passengers.length > 0 && item.passengers[0].lastName) {",
									"            lastNames.push(item.passengers[0].lastName);",
									"        }",
									"    });",
									"",
									"    pm.collectionVariables.set(\"lastName\", lastNames);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6bb35ae5-8061-4c80-bbf3-390c995cc581",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{akamai-url}}/api/e500/auto-upgrade/?pnr=QOSBBS",
							"host": [
								"{{akamai-url}}"
							],
							"path": [
								"api",
								"e500",
								"auto-upgrade",
								""
							],
							"query": [
								{
									"key": "pnr",
									"value": "QOSBBS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrades-Check-in-service",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e7ef066e-c207-4200-9b84-dd8331269626",
								"exec": [
									"\r",
									"const tokenRequest = {\r",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",\r",
									"    method: 'POST',\r",
									"    header: { \r",
									"        'content-type': 'application/x-www-form-urlencoded',\r",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',\r",
									"        },\r",
									"    body: {\r",
									"        mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: 'client_credentials'}\r",
									"    ]\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(tokenRequest, function (err, res) {\r",
									"    var jsonData = res.json();\r",
									"    if (err) {\r",
									"        console.log(err);\r",
									"    }\r",
									"    else {\r",
									"        pm.environment.set(\"token\", res.json().token);\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ced6d4eb-d8b6-4943-971e-513b6daf0758",
								"exec": [
									"pm.test(\"Response body contains the specified text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('Complimentary upgrade requested, adding to priority list');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "edd9d416-4f3b-4cd5-8742-0d47352b0c9b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-Transaction-Id",
								"value": "123",
								"type": "text"
							},
							{
								"key": "X-Client-Id",
								"value": "LoyUpgrds",
								"type": "text"
							},
							{
								"key": "X-Correlation-id",
								"value": "123",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"RRNOPC_AA_516_SAN_PHX_2025-01-14\",\n    \"pnrSeqNumber\": 5,\n    \"createDateTime\": \"2025-01-13\",\n    \"locator\": \"QOSBBS\",\n    \"companionPnr\": null,\n    \"sponsorPnr\": null,\n    \"primaryTier\": \"{{primaryTier}}\",\n    \"segment\": {\n        \"action\": \"Requested\",\n        \"airline\": \"AA\",\n        \"marketingAirline\": \"AA\",\n        \"flightNumber\": {{flightNumber}},\n        \"origin\": \"{{origin}}\",\n        \"destination\": \"{{destination}}\",\n        \"departureDate\": \"{{departureDate}}\",\n        \"departureDateTimeLocal\": \"{{departureDateTimeLocal}}\",\n        \"arrivalDateTimeLocal\": \"{{arrivalDateTimeLocal}}\",\n        \"fareClass\": \"Y\",\n        \"segSequence\": 1,\n        \"statusCode\": \"HK\",\n        \"active\": true,\n        \"departureDateTime\": \"{{departureDateTime}}\",\n        \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n        \"upgRequestDateTime\": \"{{upgRequestDateTime}}\"\n    },\n    \"passengers\": [\n        {\n            \"paxRefNum\": \"01.01\",\n            \"firstName\": \"{{firstName}}\",\n            \"lastName\": \"{{lastName}}\",\n            \"nameID\": 0,\n            \"passengerType\": \"ADULT\",\n            \"checkin\": true\n        }\n    ],\n    \"_ts\": \"2025-01-13T13:59:02Z\",\n    \"createdDate\": \"2025-01-13T13:59:02.825794041Z\",\n    \"lastModifiedBy\": \"RIPA\",\n    \"lastModifiedByDate\": \"2025-01-13T13:59:02.825807441Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{akamai-url}}/api/e500/auto-upgrade/checkin/pax"
					},
					"response": [
						{
							"id": "f0adcdfa-5c19-4640-b67c-f8915bd18338",
							"name": "Upgrades-Check-in-service",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "X-Transaction-Id",
										"value": "123",
										"type": "text"
									},
									{
										"key": "X-Client-Id",
										"value": "LoyUpgrds",
										"type": "text"
									},
									{
										"key": "X-Correlation-id",
										"value": "123",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\n       \"id\": \"RRNOPC_AA_516_SAN_PHX_2025-01-14\",\n        \"pnrSeqNumber\": 5,\n        \"createDateTime\": \"2025-01-13\",\n        \"locator\": \"{{pnrResponse}}\",\n        \"companionPnr\": null,\n        \"sponsorPnr\": null,\n        \"primaryTier\": \"{{primaryTier}}\",\n        \"segment\": {\n            \"action\": \"Requested\",\n            \"airline\": \"AA\",\n            \"marketingAirline\": \"AA\",\n            \"flightNumber\": {{flightNumber}},\n            \"origin\": \"{{origin}}\",\n            \"destination\": \"{{destination}}\",\n            \"departureDate\": \"{{departureDate}}\",\n            \"departureDateTimeLocal\": \"{{departureDateTimeLocal}}\",\n            \"arrivalDateTimeLocal\": \"{{arrivalDateTimeLocal}}\",\n            \"fareClass\": \"Y\",\n            \"segSequence\": 1,\n            \"statusCode\": \"HK\",\n            \"active\": true,\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"upgRequestDateTime\": \"{{upgRequestDateTime}}\"\n        },\n        \"passengers\": [\n            {\n                \"paxRefNum\": \"01.01\",\n                \"firstName\": \"{{firstName}}\",\n                \"lastName\": \"{{lastName}}\",\n                \"nameID\": 0,\n                \"passengerType\": \"ADULT\",\n                \"checkin\": true\n                \n            }\n        ],\n        \"_ts\": \"2025-01-13T13:59:02Z\",\n        \"createdDate\": \"2025-01-13T13:59:02.825794041Z\",\n        \"lastModifiedBy\": \"RIPA\",\n        \"lastModifiedByDate\": \"2025-01-13T13:59:02.825807441Z\"\n    }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://loyalty-upgrades.stage.aa.com/api/e500/auto-upgrade/checkin/pax"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "x-response-time",
									"value": "7478"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "7490"
								},
								{
									"key": "Content-Length",
									"value": "494"
								},
								{
									"key": "X-EdgeConnect-MidMile-RTT",
									"value": "0"
								},
								{
									"key": "X-EdgeConnect-Origin-MEX-Latency",
									"value": "7523"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jan 2025 16:15:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"checkIn\": true,\n    \"seatsAssigned\": false,\n    \"errorMessage\": \"Complimentary upgrade requested, adding to priority list\",\n    \"locator\": \"PTOZUF\",\n    \"transactionId\": \"RRNOPC_AA_516_SAN_PHX_2025-01-14\",\n    \"passengerCheckInInfos\": [\n        {\n            \"passengerId\": \"01.01\",\n            \"firstName\": \"AADVANTAG\",\n            \"lastName\": \"TEST\",\n            \"checkInStatus\": null,\n            \"error\": null,\n            \"additionalCheckInMessage\": null,\n            \"dhsStatus\": null,\n            \"seatNumber\": null,\n            \"origin\": \"SAN\",\n            \"destination\": null,\n            \"flightNumber\": \"625\",\n            \"cabinClass\": \"Y\",\n            \"departureDateTime\": \"2025-01-17T16:15:00:000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "AddPriorityList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d778fe77-a45f-40a9-904c-5a1b696739b6",
								"exec": [
									"const tokenRequest = {",
									"    url: \"https://api.stage.aa.com/edgemicro-auth/token\",",
									"    method: 'POST',",
									"    header: { ",
									"        'content-type': 'application/x-www-form-urlencoded',",
									"        'Authorization': 'Basic T0Z1Y1BQZEdIUGZ2Z2N1Y1VUMW9YZldHSE1Tcms0ckc6T3VHRUdXZDNHTXU0anlkWQ==',",
									"        },",
									"    body: {",
									"        mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: 'client_credentials'}",
									"    ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(tokenRequest, function (err, res) {",
									"    var jsonData = res.json();",
									"    if (err) {",
									"        console.log(err);",
									"    }",
									"    else {",
									"        pm.environment.set(\"token\", res.json().token);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "de769daa-e1e3-41d4-994a-7fd028525c76",
								"exec": [
									"pm.test(\"Response body contains 'PASSENGER ALREADY ON PRIORITY LIST'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"PASSENGER ALREADY ON PRIORITY LIST\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "24614e62-8eb2-472e-a06f-c58ad45a4bf1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Transaction-Id",
								"value": "Test-2024230283939",
								"type": "text"
							},
							{
								"key": "X-Client-Id",
								"value": "LocalClient",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pnrLocator\": \"{{pnrResponse}}\",\n    \"flightCriteria\": {\n        \"airlineCode\": \"AA\",\n        \"flightNumber\": \"{{flightNumber}}\",\n        \"departureAirportCode\": \"{{origin}}\",\n        \"departureDate\": \"{{departureDate}}\",\n        \"arrivalAirportCode\": \"{{destination}}\"\n    },\n    \"passengerInfo\": [\n        {\n            \"nameAssociationId\": \"1\",\n            \"lastName\": \"{{lastName}}\",\n            \"firstName\": \"{{firstName}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://loyalty-upgrades.stage.aa.com/api/loyalty/upgrades/addprioritylist"
					},
					"response": []
				}
			],
			"id": "344c0946-5bfd-400c-b93f-d386ed429e31"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f1059e32-9efd-4591-a760-67905fc8669c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ae0dba5e-526a-4ebb-bedd-270db56ba0a4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pnrResponse",
			"value": ""
		},
		{
			"key": "primaryTier",
			"value": ""
		},
		{
			"key": "flightNumber",
			"value": ""
		},
		{
			"key": "origin",
			"value": ""
		},
		{
			"key": "destination",
			"value": ""
		},
		{
			"key": "departureDate",
			"value": ""
		},
		{
			"key": "departureDateTimeLocal",
			"value": ""
		},
		{
			"key": "arrivalDateTimeLocal",
			"value": ""
		},
		{
			"key": "departureDateTime",
			"value": ""
		},
		{
			"key": "arrivalDateTime",
			"value": ""
		},
		{
			"key": "upgRequestDateTime",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "nextDate",
			"value": ""
		},
		{
			"key": "originAirportCode",
			"value": ""
		},
		{
			"key": "departureAirportCode",
			"value": ""
		}
	]
}